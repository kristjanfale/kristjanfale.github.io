@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;500;700;900&display=swap');

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  scroll-behavior: smooth;
  // font-size: 62.5%; // 1rem = 10px
  font-size: calc(16px + (24 - 16) * ((100vw - 300px) / (1300 - 300)));
}

body {
  font-family: 'Rubik', sans-serif;
  font-weight: $fw-regular;
}

.container {
  width: 100%;
  height: 100vh;
  // overflow: scroll;
  // scroll-snap-type: y mandatory;
  position: relative;
}

// HAMBURGER BUTTON
.nav-toggle {
  z-index: 20;
  position: fixed;
  top: 1rem;
  right: 1rem;
  width: 3rem;
  height: 3rem;
  background-color: transparent;
  border: 0.1rem solid $clr-white;
  border-radius: 50%;
  cursor: pointer;
  outline: none;
  display: flex;
  justify-content: center;
  align-items: center;

  // &:hover .hamburger:before {
  //   top: -0.6rem;
  // }

  // &:hover .hamburger:after {
  //   bottom: -0.6rem;
  // }
}

.hamburger {
  position: relative;
  display: block;

  &,
  &:before,
  &::after {
    width: 1.7rem;
    height: 0.12rem;
    background-color: $clr-white;
    border-radius: 2rem;
    transition: all 350ms cubic-bezier(0.5, 0, 0.5, 1);
  }

  &:before,
  &::after {
    content: '';
    position: absolute;
    left: 0;
  }

  &:before {
    top: -0.4rem;
  }

  &:after {
    bottom: -0.4rem;
  }
}
// END HAMBURGER BUTTON

// NAVIGATION
.nav {
  border-radius: 2rem;
  position: fixed;
  top: -1rem;
  bottom: -1rem;
  left: -1rem;
  right: -1rem;
  transform: scale(0, 0);
  transform-origin: calc(100% - 3.5rem) 3.5em;
  z-index: 10;
  background: linear-gradient(to left, $clr-black, $clr-primary);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 350ms cubic-bezier(0.5, 0, 0.5, 1);

  &__list {
    list-style: none;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  &__item:not(:last-child) {
    margin-bottom: 1rem;
  }

  &__item {
  }

  &__link {
    display: inline-block;
    color: $clr-white;
    text-decoration: none;
    font-size: $fs-h6;
    font-weight: $fw-medium;
    text-shadow: 0.2rem 0 0.2rem $clr-black;
  }
}
// END NAVIGATION

// WHEN <body> HAS NAV-OPEN
.nav-open {
  & .nav {
    transform: scale(1, 1);
  }

  & .hamburger {
    width: 0rem;

    &:before,
    &::after {
      left: -0.85rem; // Half the width of hamburger(1.7rem)
    }

    &:before {
      // transform: rotate(60deg) translate(0.3rem, 0.27rem);
      transform: translateY(0.4rem) rotate(135deg);
    }

    &:after {
      transform: translateY(-0.4rem) rotate(-135deg);
    }
  }

  .nav-toggle:hover .hamburger {
    &:before {
      top: -0.4rem;
      // transform: translate();
    }

    &:after {
      bottom: -0.4rem;
    }
  }
}
// END WHEN <body> HAS NAV-OPEN

.section {
  min-height: 100vh;
  width: 100%;
  padding: 3rem;
  // position: sticky;
  // top: 0;
  // scroll-snap-align: center;

  &--home {
    background: radial-gradient($clr-primary, $clr-black),
      url(../img/computer_bg.jpg);
    background-blend-mode: multiply;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    color: $clr-white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  &--about {
    background-color: $clr-primary;
  }

  &--portfolio {
    background-color: #000;
  }

  &--contact {
    background-color: $clr-primary;
  }
}

// GLITCH
.glitch {
  mix-blend-mode: lighten;
  position: relative;
  display: inline-block;
}

.glitch:before {
  left: 0.15rem;
  text-shadow: -0.1rem 0 $clr-red;
  animation: glitch-one 2000ms infinite ease-in-out alternate-reverse;
}

.glitch:after {
  left: -0.15rem;
  text-shadow: -0.1rem 0 $clr-blue;
  animation: glitch-two 2000ms infinite ease-in-out alternate-reverse;
}

.glitch:before,
.glitch:after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background: #000;
  overflow: hidden;
  clip: rect(0rem, 0rem, 0rem, 0rem);
}
